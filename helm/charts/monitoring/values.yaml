nameOverride: monitoring
fullnameOverride: monitoring

prometheus:
  server:
    persistentVolume:
      enabled: true
      size: 4Gi
    service:
      type: LoadBalancer
      annotations:
        service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
    resources:
      limits:
        cpu: 300m
        memory: 512Mi
      requests:
        cpu: 100m
        memory: 256Mi

grafana:
  persistence:
    type: pvc
    enabled: true
    size: 2Gi

  service:
    type: LoadBalancer
    port: 80
    targetPort: 3000
    annotations:
      service.beta.kubernetes.io/aws-load-balancer-type: "nlb"

  resources:
    limits:
      cpu: 200m
      memory: 256Mi
    requests:
      cpu: 100m
      memory: 128Mi

  datasources:
    datasources.yaml:
      apiVersion: 1
      deleteDatasources: []
      datasources:
        - name: Prometheus
          type: prometheus
          url: http://monitoring-prometheus-server
          access: proxy
          isDefault: true
        - name: Loki
          type: loki
          access: proxy
          url: http://monitoring-loki:3100
          jsonData:
            maxLines: 1000
            timeout: 30
            featureToggles:
              live: true
            liveEnabled: true
          version: 1
          editable: true
          basicAuth: false

  adminUser: admin
  adminPassword: admin

  grafana.ini:
    server:
      root_url: "%(protocol)s://%(domain)s/"
    auth:
      disable_login_form: false
    security:
      allow_embedding: true

loki:
  enabled: true
  singleBinary:
    replicas: 1

  service:
    name: monitoring-loki
    port: 3100
    targetPort: 3100
    annotations: {}

  ports:
    - name: http-metrics
      port: 3100
      protocol: TCP
      targetPort: 3100
    - name: grpc
      port: 9095
      protocol: TCP
      targetPort: 9095

  persistence:
    enabled: true
    size: 5Gi
    storageClass: gp2

  resources:
    limits:
      cpu: 200m
      memory: 256Mi
    requests:
      cpu: 100m
      memory: 128Mi

  config:
    auth_enabled: false
    server:
      http_listen_port: 3100
      http_listen_address: "0.0.0.0"
      grpc_listen_port: 9095
      grpc_listen_address: "0.0.0.0"
      log_level: "debug"

    ingester:
      lifecycler:
        address: "0.0.0.0"
        ring:
          kvstore:
            store: inmemory
          replication_factor: 1
      chunk_idle_period: 3m
      chunk_block_size: 262144
      chunk_retain_period: 1m
      max_transfer_retries: 0
      wal:
        dir: /data/loki/wal

    storage_config:
      boltdb_shipper:
        active_index_directory: /data/loki/index
        cache_location: /data/loki/boltdb-cache
        cache_ttl: 24h
        shared_store: filesystem
      filesystem:
        directory: /data/loki/chunks

    schema_config:
      configs:
        - from: "2020-10-24"
          store: boltdb-shipper
          object_store: filesystem
          schema: v11
          index:
            prefix: index_
            period: 24h

    compactor:
      shared_store: filesystem
      working_directory: /data/loki/boltdb-shipper-compactor
      retention_enabled: false

    limits_config:
      enforce_metric_name: false
      reject_old_samples: true
      reject_old_samples_max_age: 168h
      max_entries_limit_per_query: 5000

    table_manager:
      retention_deletes_enabled: false
      retention_period: 0s

promtail:
  enabled: true
  resources:
    limits:
      cpu: 100m
      memory: 128Mi
    requests:
      cpu: 50m
      memory: 64Mi

  config:
    server:
      log_level: debug

    clients:
      - url: "http://monitoring-loki.monitoring.svc.cluster.local:3100/loki/api/v1/push"
        tenant_id: fake
        external_labels:
          cluster: eks
          environment: monitoring
        batchwait: "1s"
        batchsize: 102400
        timeout: "10s"
        backoff_config:
          min_period: "100ms"
          max_period: "5s"
    snippets:
      extraRelabelConfigs: []
