apiVersion: v1
kind: Namespace
metadata:
  name: monitoring-ingress
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: monitoring-nginx
  namespace: monitoring-ingress
---
apiVersion: networking.k8s.io/v1
kind: IngressClass
metadata:
  name: monitoring-nginx
spec:
  controller: monitoring.k8s.io/ingress-nginx
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: monitoring-nginx
rules:
  - apiGroups: [""]
    resources:
      [
        "configmaps",
        "endpoints",
        "nodes",
        "pods",
        "secrets",
        "services",
        "namespaces",
      ]
    verbs: ["list", "watch", "get"]
  - apiGroups: ["networking.k8s.io"]
    resources: ["ingresses", "ingressclasses", "ingresses/status"]
    verbs: ["get", "list", "watch", "update"]
  - apiGroups: ["discovery.k8s.io"]
    resources: ["endpointslices"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["coordination.k8s.io"]
    resources: ["leases"]
    verbs: ["get", "list", "watch", "create", "update", "patch"]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["create", "patch"]
  - apiGroups: [""]
    resources: ["services/status"]
    verbs: ["update", "patch"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: monitoring-nginx
subjects:
  - kind: ServiceAccount
    name: monitoring-nginx
    namespace: monitoring-ingress
roleRef:
  kind: ClusterRole
  name: monitoring-nginx
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: monitoring-nginx-controller
  namespace: monitoring-ingress
data:
  use-regex: "true"
  use-forwarded-headers: "true"
  compute-full-forwarded-for: "true"
  enable-real-ip: "true"

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: monitoring-nginx
  namespace: monitoring-ingress
spec:
  replicas: 1
  selector:
    matchLabels:
      app: monitoring-nginx
  template:
    metadata:
      labels:
        app: monitoring-nginx
    spec:
      serviceAccountName: monitoring-nginx
      containers:
        - name: controller
          image: registry.k8s.io/ingress-nginx/controller:v1.8.2
          args:
            - /nginx-ingress-controller
            - --publish-service=monitoring-ingress/monitoring-nginx
            - --election-id=monitoring-ingress-leader
            - --controller-class=monitoring.k8s.io/ingress-nginx
            - --ingress-class=monitoring-nginx
            - --configmap=monitoring-ingress/monitoring-nginx-controller
            - --validating-webhook=false
            - --validating-webhook-certificate=
            - --validating-webhook-key=
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          resources:
            limits:
              cpu: 200m
              memory: 256Mi
            requests:
              cpu: 100m
              memory: 128Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
              add:
                - NET_BIND_SERVICE
            runAsUser: 101
---
apiVersion: v1
kind: Service
metadata:
  name: monitoring-nginx
  namespace: monitoring-ingress
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
    service.beta.kubernetes.io/aws-load-balancer-scheme: "internet-facing"
    service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: "true"
spec:
  type: LoadBalancer
  ports:
    - port: 80
      targetPort: 80
      protocol: TCP
      name: http
  selector:
    app: monitoring-nginx
