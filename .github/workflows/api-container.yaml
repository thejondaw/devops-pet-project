name: API CI/CD

on:
  workflow_dispatch:
  push:
    branches: [ "master", "stage", "develop" ]
    paths:
      - 'apps/api/**'
  pull_request:
    branches: [ "develop", "stage", "master" ]
    paths:
      - 'apps/api/**'

env:
  DOCKER_REPO: ${{ secrets.DOCKERHUB_USERNAME }}/devops-api

jobs:
  # Добавляем новый job для SonarQube
  sonarqube:
    name: SonarQube Analysis
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0  # Важно для SonarQube, чтобы видеть историю изменений

    - name: SonarQube Scan
      uses: sonarsource/sonarqube-scan-action@master
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      with:
        args: >
          -Dsonar.projectKey=devops-api
          -Dsonar.sources=apps/api
          -Dsonar.javascript.lcov.reportPaths=apps/api/coverage/lcov.info

  test:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v3

    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '14'

    - name: Install dependencies
      run: |
        cd apps/api
        if [ -f "package.json" ]; then
          npm install --verbose
        else
          echo "package.json not found in apps/api"
          exit 1
        fi

    - name: Run tests
      run: |
        cd apps/api
        npm test

  build-and-push:
    # Добавляем sonarqube в needs, чтобы убедиться, что анализ прошел перед сборкой
    needs: [test, sonarqube]
    runs-on: ubuntu-20.04
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.pull_request.base.ref == 'master')
    steps:
    - uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push
      uses: docker/build-push-action@v4
      with:
        context: ./apps/api
        file: ./apps/api/Dockerfile
        push: ${{ github.event_name == 'push' }}
        tags: |
          ${{ env.DOCKER_REPO }}:${{ github.sha }}
          ${{ env.DOCKER_REPO }}:${{ github.ref == 'refs/heads/master' && 'latest' || github.ref == 'refs/heads/stage' && 'stage' || 'develop' }}

    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: '${{ env.DOCKER_REPO }}:${{ github.sha }}'
        format: 'table'
        exit-code: '0'
        ignore-unfixed: true
        vuln-type: 'os,library'
        severity: 'CRITICAL,HIGH'