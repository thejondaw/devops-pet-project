name: CD - Infrastructure Deployment

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Environment to deploy to"
        required: true
        default: "develop"
        type: choice
        options: [develop, stage, master]
      action:
        description: "Action to perform"
        required: true
        type: choice
        options: [apply, destroy]
        default: "apply"
  push:
    branches: ["master", "stage", "develop"]
    paths:
      - "terraform/**"
      - ".github/workflows/cd-infrastructure.yaml"
      - "Makefile"

env:
  AWS_REGION: us-east-2
  TF_BACKEND_BUCKET: alexsuff
  TARGET_ENV: ${{ github.event.inputs.environment || github.ref_name }}

jobs:
  Prepare:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Set Deployment Matrix
        id: set-matrix
        run: |
          if [[ "${{ github.event.inputs.action }}" == "destroy" ]]; then
            echo "matrix={\"module\":[\"Tools\",\"RDS\",\"EKS\",\"VPC\",\"S3\"], \"path\":[\"tools\",\"rds\",\"eks\",\"vpc\",\"backend\"]}" >> $GITHUB_OUTPUT
          else
            echo "matrix={\"module\":[\"S3\",\"VPC\",\"EKS\",\"RDS\",\"Tools\"], \"path\":[\"backend\",\"vpc\",\"eks\",\"rds\",\"tools\"]}" >> $GITHUB_OUTPUT
          fi

  Deploy:
    needs: Prepare
    runs-on: ubuntu-latest
    name: Deploy - ${{ matrix.module }}
    environment: ${{ github.event.inputs.environment || github.ref_name }}
    strategy:
      matrix: ${{ fromJSON(needs.Prepare.outputs.matrix) }}
      fail-fast: true
      max-parallel: 1

    steps:
      - uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Process Terraform Module
        working-directory: terraform/modules/${{ matrix.path }}
        env:
          IS_BACKEND: ${{ matrix.path == 'backend' }}
          ACTION: ${{ github.event.inputs.action || 'apply' }}
        run: |
          # Initialize Terraform
          if [[ "$IS_BACKEND" == "true" ]]; then
            terraform init
          else
            terraform init \
              -backend-config="bucket=${{ env.TF_BACKEND_BUCKET }}" \
              -backend-config="key=environments/${{ env.TARGET_ENV }}/${{ matrix.path }}.tfstate" \
              -backend-config="region=${{ env.AWS_REGION }}"
          fi

          # Apply or Destroy
          terraform ${{ env.ACTION }} -auto-approve \
            -var-file=../../environments/${{ env.TARGET_ENV }}/terraform.tfvars
