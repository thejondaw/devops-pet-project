name: CD - Infrastructure Destruction

on:
  workflow_dispatch:
  push:
    branches: ["master", "stage", "develop"]
    # paths:

    #   # Infrastructure related changes
    #   - "terraform/modules/backend/**"
    #   - "terraform/modules/vpc/**"
    #   - "terraform/modules/eks/**"
    #   - "terraform/modules/rds/**"
    #   - "terraform/modules/tools/**"
    #   - "terraform/environments/**/*.tfvars"
    #   - ".github/workflows/cd-infrastructure-destroy.yaml"
    #   # Configuration files
    #   - "terraform/environments/develop/main.tf"
    #   - "terraform/environments/stage/main.tf"
    #   - "terraform/environments/master/main.tf"
    #   - "Makefile"

env:
  TF_STATE_BUCKET: "alexsuff"
  AWS_REGION: "us-east-2"

jobs:
  infrastructure:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment || 'develop' }}

    steps:
      - uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      # - name: 1. Destroy - TOOLS
      #   run: |
      #     cd terraform/modules/tools
      #     terraform init \
      #       -backend-config="bucket=${{ env.TF_STATE_BUCKET }}" \
      #       -backend-config="key=environments/${{ github.event.inputs.environment || 'develop' }}/tools.tfstate" \
      #       -backend-config="region=${{ env.AWS_REGION }}"
      #     terraform destroy -auto-approve -var-file=../../environments/${{ github.event.inputs.environment || 'develop' }}/terraform.tfvars

      - name: 2. Destroy - RDS
        run: |
          cd terraform/modules/rds
          terraform init \
            -backend-config="bucket=${{ env.TF_STATE_BUCKET }}" \
            -backend-config="key=environments/${{ github.event.inputs.environment || 'develop' }}/rds.tfstate" \
            -backend-config="region=${{ env.AWS_REGION }}"
          terraform destroy -auto-approve -var-file=../../environments/${{ github.event.inputs.environment || 'develop' }}/terraform.tfvars

      # Then destroy EKS
      - name: 3. Destroy - EKS
        if: success()
        run: |
          cd terraform/modules/eks
          terraform init \
            -backend-config="bucket=${{ env.TF_STATE_BUCKET }}" \
            -backend-config="key=environments/${{ github.event.inputs.environment || 'develop' }}/eks.tfstate" \
            -backend-config="region=${{ env.AWS_REGION }}"
          terraform destroy -auto-approve -var-file=../../environments/${{ github.event.inputs.environment || 'develop' }}/terraform.tfvars

      # 4. Destroy - VPC
      - name: Destroy VPC
        if: success()
        run: |
          cd terraform/modules/vpc
          terraform init \
            -backend-config="bucket=${{ env.TF_STATE_BUCKET }}" \
            -backend-config="key=environments/${{ github.event.inputs.environment || 'develop' }}/vpc.tfstate" \
            -backend-config="region=${{ env.AWS_REGION }}"
          terraform destroy -auto-approve -var-file=../../environments/${{ github.event.inputs.environment || 'develop' }}/terraform.tfvars
