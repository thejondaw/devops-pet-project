name: CI - Create/Update API

# Trigger workflow on:
# - Manual dispatch from GitHub Actions UI
# - Push to develop branch with changes in specified paths
on:
  workflow_dispatch:
  push:
    branches: [ "develop" ]
    paths:
      - 'apps/api/**'
      - 'apps/api/src/**'
      - 'apps/api/tests/**'
      - 'apps/api/package.json'
      - 'apps/api/Dockerfile'
      - 'sonar-project.properties'
      - '.github/workflows/ci-api.yaml'

# Environment Variables used across Jobs
env:
  DOCKER_REPO: ${{ secrets.DOCKERHUB_USERNAME }}/devops-api

jobs:
  # First job: Code linting
  lint:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v3

    # Setup Node.js environment
    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '14'

    # Install Project dependencies
    - name: Install dependencies
      run: |
        cd apps/api
        if [ -f "package.json" ]; then
          npm install
        else
          echo "package.json not found in apps/api"
          exit 1
        fi

    # Run ESLint
    - name: Run linting
      run: |
        cd apps/api
        npm run lint

    # Run Prettier check
    - name: Check code formatting
      run: |
        cd apps/api
        npm run format:check

  # Second job: Run unit tests
  test:
    needs: [lint]
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v3

    # Setup Node.js environment
    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '14'

    # Install Project dependencies
    - name: Install dependencies
      run: |
        cd apps/api
        if [ -f "package.json" ]; then
          npm install --verbose
        else
          echo "package.json not found in apps/api"
          exit 1
        fi

    # Run test suite
    - name: Run tests
      run: |
        cd apps/api
        npm test

  # Third job: Build Docker image
  build:
    needs: [test]
    runs-on: ubuntu-20.04
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch' || (github.event_name == 'pull_request' && github.event.pull_request.base.ref == 'master')
    steps:
    - uses: actions/checkout@v3

    # Setup Docker Buildx for multi-platform builds
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    # Authenticate with Docker Hub
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    # Build and push Docker image
    - name: Build and push
      uses: docker/build-push-action@v4
      with:
        context: ./apps/api
        file: ./apps/api/Dockerfile
        push: ${{ github.event_name == 'push' || github.event_name == 'workflow_dispatch' }}
        tags: |
          ${{ env.DOCKER_REPO }}:${{ github.sha }}
          ${{ env.DOCKER_REPO }}:${{ github.ref == 'refs/heads/master' && 'latest' || github.ref == 'refs/heads/stage' && 'stage' || 'develop' }}

  # Fourth job: Security scanning
  security-scan:
    needs: [build]
    runs-on: ubuntu-20.04
    steps:
    # Scan Docker image for vulnerabilities using Trivy
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: '${{ env.DOCKER_REPO }}:${{ github.sha }}'
        format: 'table'
        exit-code: '0'
        ignore-unfixed: true
        vuln-type: 'os,library'
        severity: 'CRITICAL,HIGH'

  # Fifth job: Code quality analysis using SonarQube & SonarCloud
  sonarcloud:
    needs: [security-scan]
    name: SonarCloud
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # Run SonarCloud analysis
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.branch.name=${{ github.ref_name }}
            ${{ github.ref_name != 'master' && format('-Dsonar.branch.target={0}', 'master') || '' }}
